<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "mybatis-3-mapper.dtd">
  
<mapper namespace="com.msa.kyj_prj.club.member.ClubMemberDAO">

<!-- // 클럽 멤버 등록 -->
	<insert id="insert" parameterType="com.msa.kyj_prj.club.member.ClubMember">
    INSERT INTO tbl_club_member (
        club_id,
        user_no,
        role,
        joined_at,
        match_count,
        pom
    ) VALUES (
        #{club_id},
        #{user_no},
        #{role},
        NOW(),
        #{match_count},
        #{pom}
    )
	</insert>

    <!-- // 클럽별 전체 멤버 리스트 조회 -->
    <select id="findByClubId" parameterType="int" resultType="com.msa.kyj_prj.club.member.ClubMember">
    SELECT
    m.club_id,
    m.user_no,
    m.role,
    m.joined_at,
    m.left_at,
    u.user_name,
    -- 리그 매치 횟수
    SUM(CASE WHEN mt.match_code = 'league' THEN 1 ELSE 0 END) AS match_count,
    -- POM 횟수
    SUM(CASE WHEN ml.log_type = 'POM' THEN 1 ELSE 0 END) AS pom
	FROM tbl_club_member m
	JOIN user u ON m.user_no = u.user_no
	LEFT JOIN match_log ml ON ml.club_id = m.club_id AND ml.user_no = m.user_no
	LEFT JOIN `match` mt ON ml.match_id = mt.match_id
	WHERE m.club_id = #{club_id}
	GROUP BY m.club_id, m.user_no, m.role, m.joined_at, m.left_at, u.user_name
	ORDER BY m.joined_at ASC;
	</select>


    <!-- // 특정 유저의 클럽 멤버 정보 조회 -->
 	<select id="findByClubIdAndUserNo" parameterType="map" resultType="com.msa.kyj_prj.club.member.ClubMember">
	    SELECT
	    m.club_id,
	    m.user_no,
	    m.role,
	    m.joined_at,
	    m.left_at,
	    u.user_name,
	    -- 리그 매치 횟수
	    SUM(CASE WHEN mt.match_code = 'league' THEN 1 ELSE 0 END) AS match_count,
	    -- POM 횟수
	    SUM(CASE WHEN ml.log_type = 'POM' THEN 1 ELSE 0 END) AS pom
		FROM tbl_club_member m
		JOIN user u ON m.user_no = u.user_no
		LEFT JOIN match_log ml ON ml.club_id = m.club_id AND ml.user_no = m.user_no
		LEFT JOIN `match` mt ON ml.match_id = mt.match_id
		WHERE m.club_id = #{club_id}
		  AND m.user_no = #{user_no}
		GROUP BY m.club_id, m.user_no, m.role, m.joined_at, m.left_at, u.user_name
		LIMIT 1
	</select>


    <!-- // 클럽 멤버 탈퇴(삭제) -->
    <update id="deleteByClubIdAndUserNo" parameterType="map">
         UPDATE tbl_club_member
        SET left_at = NOW()
        WHERE club_id = #{club_id}
          AND user_no = #{user_no}
    </update>

    <!-- // 클럽 멤버 역할 변경 -->
    <update id="updateRoleByClubIdAndUserNo" parameterType="map">
        UPDATE tbl_club_member
        SET role = #{role}
        WHERE club_id = #{club_id}
          AND user_no = #{user_no}
    </update>

</mapper>