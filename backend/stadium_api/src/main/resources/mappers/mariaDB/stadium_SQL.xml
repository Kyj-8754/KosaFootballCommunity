<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.msa.kyj_prj.stadium.StadiumDAO">
	<sql id="search">
		where state != 'DELETE'   <!-- ① 무조건 적용 -->
        <if test="searchValue != null and searchValue != ''">
		    <choose>
		     <when test="searchType == ''">
		       AND (
		          svcnm LIKE CONCAT('%', #{searchValue}, '%')
		          OR areanm LIKE CONCAT('%', #{searchValue}, '%')
		          OR placenm LIKE CONCAT('%', #{searchValue}, '%')
		        )
		      </when>
		      <when test="searchType == 'svcnm'">
		      AND svcnm LIKE concat('%', #{searchValue}, '%')
		      </when>
		      <when test="searchType == 'areanm'">
		       AND areanm LIKE concat('%', #{searchValue}, '%')
		      </when>
		      <when test="searchType == 'placenm'">
		      AND  placenm LIKE concat('%', #{searchValue}, '%')
		      </when>
		    </choose>
        </if>
	</sql>
	
	<select id="list" resultType="com.msa.kyj_prj.dto.StadiumListDTO">
	    SELECT s.*,
	    IFNULL(ROUND(AVG(c.rating), 1), 0) AS avg_rating,
    	COUNT(c.comment_no) AS comment_count
		FROM stadium s
		LEFT JOIN stadium_comment c ON s.svcid = c.svcid
			<include refid="search"/>
	    GROUP BY s.svcid
		LIMIT #{start}, #{end}
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*)
		from stadium
		<include refid="search"/>
	</select>
	
	<select id="getStadium" resultType="com.msa.kyj_prj.dto.Stadium">
		select * from stadium where SVCID = #{SVCID}
	</select>
	
	<select id="getAvailableDate" resultType="com.msa.kyj_prj.dto.Slot">
		select distinct slot_date
		from reservation_slot
		where svcid = #{svcid}
		AND slot_date &gt;= CURDATE()
      	AND slot_date &lt;= DATE_ADD(CURDATE(), INTERVAL (6 - WEEKDAY(CURDATE())) DAY)
		order by slot_date
	</select>

	
	<update id="update">
		update stadium set 
		  	SVCNM = #{SVCNM},
		    PLACENM = #{PLACENM},
		    TELNO = #{TELNO},
		    V_MIN = #{V_MIN},
		    V_MAX = #{V_MAX},
		    NOTICE = #{NOTICE},
		    ADRES = #{ADRES}
		where SVCID = #{SVCID}
	</update>
	
	
	<select id="findAllSvcIds" resultType="string">
	  SELECT SVCID FROM stadium
	</select>
	
	<insert id="regist">
		insert into stadium (
			SVCID, 
			SVCNM, 
			PLACENM,
			X,
			Y,
			IMG_PATH,
			TELNO,
			v_min,
			v_max,
			notice,
			SUBPLACENM,
			ORGNM,
			SVCENDTELNO,
			AREANM,
			ADRES,
			DTLCONT 
		) values (
			#{SVCID}, 
			#{SVCNM}, 
			#{PLACENM},
			#{X},
			#{Y},
			#{IMG_PATH},
			#{TELNO},
			#{V_MIN},
			#{V_MAX},
			#{NOTICE},
			#{SUBPLACENM},
			#{ORGNM},
			#{SVCENDTELNO},
			#{AREANM},
			#{ADRES},
			#{DTLCONT}
		)
	</insert>
	
	<insert id="registPatch">
		insert into stadium_patch (
			SVCID, 
			SVCNM, 
			PLACENM,
			X,
			Y,
			IMG_PATH,
			TELNO,
			v_min,
			v_max,
			notice,
			SUBPLACENM,
			ORGNM,
			SVCENDTELNO,
			AREANM,
			ADRES,
			DTLCONT 
		) values (
			#{SVCID}, 
			#{SVCNM}, 
			#{PLACENM},
			#{X},
			#{Y},
			#{IMG_PATH},
			#{TELNO},
			#{V_MIN},
			#{V_MAX},
			#{NOTICE},
			#{SUBPLACENM},
			#{ORGNM},
			#{SVCENDTELNO},
			#{AREANM},
			#{ADRES},
			#{DTLCONT}
		)
	</insert>
	
	
	
	<insert id="insertApiDetailLog" parameterType="map">
	  INSERT INTO stadium_api_detail (svcid, code, message)
	  VALUES (#{svcid}, #{code}, #{message})
	</insert>
	
	<select id="callSyncStadiumProcedure" statementType="CALLABLE">
        CALL sync_stadium_state()
    </select>
    
	
</mapper>