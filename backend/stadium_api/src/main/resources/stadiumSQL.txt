-- kosa_db.stadium definition

CREATE TABLE `stadium` (
  `SVCID` varchar(30) NOT NULL,
  `SVCNM` varchar(50) DEFAULT NULL,
  `PLACENM` varchar(100) DEFAULT NULL,
  `X` varchar(100) DEFAULT NULL,
  `Y` varchar(100) DEFAULT NULL,
  `IMG_PATH` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `TELNO` varchar(100) DEFAULT NULL,
  `V_MIN` varchar(100) DEFAULT NULL,
  `V_MAX` varchar(100) DEFAULT NULL,
  `NOTICE` text,
  `SUBPLACENM` varchar(255) DEFAULT NULL,
  `ORGNM` varchar(100) DEFAULT NULL,
  `SVCENDTELNO` varchar(100) DEFAULT NULL,
  `AREANM` varchar(100) DEFAULT NULL,
  `ADRES` varchar(255) DEFAULT NULL,
  `DTLCONT` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,
  `state` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`SVCID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- kosa_db.stadium_comment definition

CREATE TABLE `stadium_comment` (
  `comment_no` int NOT NULL AUTO_INCREMENT,
  `content` text NOT NULL,
  `regist_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_date` datetime DEFAULT NULL,
  `status` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT 'true',
  `svcid` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `userid` varchar(100) NOT NULL,
  `rating` decimal(2,1) NOT NULL,
  PRIMARY KEY (`comment_no`),
  KEY `fk_comment_stadium` (`svcid`),
  CONSTRAINT `fk_comment_stadium` FOREIGN KEY (`svcid`) REFERENCES `stadium` (`SVCID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_stadium_comment_to_stadium` FOREIGN KEY (`svcid`) REFERENCES `stadium` (`SVCID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `chk_rating_range` CHECK (((`rating` >= 0) and (`rating` <= 5)))
);

-- kosa_db.stadium_patch definition

CREATE TABLE `stadium_patch` (
  `SVCID` varchar(30) NOT NULL,
  `SVCNM` varchar(50) DEFAULT NULL,
  `PLACENM` varchar(100) DEFAULT NULL,
  `X` varchar(100) DEFAULT NULL,
  `Y` varchar(100) DEFAULT NULL,
  `IMG_PATH` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `TELNO` varchar(100) DEFAULT NULL,
  `V_MIN` varchar(100) DEFAULT NULL,
  `V_MAX` varchar(100) DEFAULT NULL,
  `NOTICE` text,
  `SUBPLACENM` varchar(255) DEFAULT NULL,
  `ORGNM` varchar(100) DEFAULT NULL,
  `SVCENDTELNO` varchar(100) DEFAULT NULL,
  `AREANM` varchar(100) DEFAULT NULL,
  `ADRES` varchar(255) DEFAULT NULL,
  `DTLCONT` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,
  PRIMARY KEY (`SVCID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

DELIMITER $$

CREATE PROCEDURE sync_stadium_state()

CREATE TABLE `reservation_slot` (
  `slot_id` bigint NOT NULL AUTO_INCREMENT,
  `svcid` varchar(50) NOT NULL,
  `slot_date` date NOT NULL,
  `start_time` time NOT NULL,
  `end_time` time NOT NULL,
  PRIMARY KEY (`slot_id`),
  KEY `fk_reservation_stadium` (`svcid`),
  CONSTRAINT `fk_reservation_stadium` FOREIGN KEY (`svcid`) REFERENCES `stadium` (`SVCID`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=9038 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `reservation` (
  `reservation_id` bigint NOT NULL AUTO_INCREMENT,
  `slot_id` bigint NOT NULL,
  `reservation_type` enum('social','match') NOT NULL,
  `reserved_at` datetime DEFAULT CURRENT_TIMESTAMP,
  `user_no` int NOT NULL,
  PRIMARY KEY (`reservation_id`),
  KEY `fk_reservation_slot` (`slot_id`),
  KEY `fk_reservation_user` (`user_no`),
  CONSTRAINT `fk_reservation_slot` FOREIGN KEY (`slot_id`) REFERENCES `reservation_slot` (`slot_id`) ON DELETE CASCADE,
  CONSTRAINT `fk_reservation_user` FOREIGN KEY (`user_no`) REFERENCES `user` (`user_no`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


CREATE DEFINER=`kosa`@`localhost` PROCEDURE `kosa_db`.`generate_reservation_slots`()
BEGIN
  DECLARE done INT DEFAULT FALSE;
  DECLARE v_svcid VARCHAR(50);
  DECLARE v_vmin TIME;
  DECLARE v_vmax TIME;

  DECLARE cur CURSOR FOR SELECT svcid, v_min, v_max FROM stadium;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
  
    -- 슬롯 중복 방지를 위해 오늘 이후 모든 슬롯 제거
  DELETE FROM reservation_slot WHERE slot_date >= CURDATE();
    

  SET @base_date = CURDATE();  -- 오늘 날짜 기준
  SET @days_ahead = 7;

  OPEN cur;

  read_loop: LOOP
    FETCH cur INTO v_svcid, v_vmin, v_vmax;
    IF done THEN
      LEAVE read_loop;
    END IF;

    SET @i = 0;
    day_loop: WHILE @i < @days_ahead DO
      SET @target_date = DATE_ADD(@base_date, INTERVAL @i DAY);
      SET @current_time = v_vmin;

      WHILE ADDTIME(@current_time, '02:00:00') <= v_vmax DO
        INSERT INTO reservation_slot (svcid, slot_date, start_time, end_time)
        VALUES (
          v_svcid,
          @target_date,
          @current_time,
          ADDTIME(@current_time, '02:00:00')
        );
        SET @current_time = ADDTIME(@current_time, '02:00:00');
      END WHILE;

      SET @i = @i + 1;
    END WHILE;

  END LOOP;

  CLOSE cur;
END


CREATE DEFINER=`kosa`@`localhost` PROCEDURE `kosa_db`.`sync_stadium_state`()
BEGIN

    INSERT INTO stadium (
        SVCID, SVCNM, PLACENM, X, Y, IMG_PATH, TELNO,
        V_MIN, V_MAX, NOTICE, SUBPLACENM, ORGNM,
        SVCENDTELNO, AREANM, ADRES, DTLCONT, STATE
    )
    SELECT 
        sp.SVCID, sp.SVCNM, sp.PLACENM, sp.X, sp.Y, sp.IMG_PATH, sp.TELNO,
        sp.V_MIN, sp.V_MAX, sp.NOTICE, sp.SUBPLACENM, sp.ORGNM,
        sp.SVCENDTELNO, sp.AREANM, sp.ADRES, sp.DTLCONT, 'new'
    FROM stadium_patch sp
    LEFT JOIN stadium s ON sp.SVCID = s.SVCID
    WHERE s.SVCID IS NULL;

    UPDATE stadium s
    LEFT JOIN stadium_patch sp ON s.SVCID = sp.SVCID
    SET s.STATE = 'delete'
    WHERE sp.SVCID IS NULL;

    UPDATE stadium s
    JOIN stadium_patch sp ON s.SVCID = sp.SVCID
    SET s.STATE = 'update'
    WHERE (
        IFNULL(s.SVCNM, '')       != IFNULL(sp.SVCNM, '') OR
        IFNULL(s.PLACENM, '')     != IFNULL(sp.PLACENM, '') OR
        IFNULL(s.X, 0)            != IFNULL(sp.X, 0) OR
        IFNULL(s.Y, 0)            != IFNULL(sp.Y, 0) OR
        IFNULL(s.IMG_PATH, '')    != IFNULL(sp.IMG_PATH, '') OR
        IFNULL(s.TELNO, '')       != IFNULL(sp.TELNO, '') OR
        IFNULL(s.V_MIN, '')       != IFNULL(sp.V_MIN, '') OR
        IFNULL(s.V_MAX, '')       != IFNULL(sp.V_MAX, '') OR
        IFNULL(s.NOTICE, '')      != IFNULL(sp.NOTICE, '') OR
        IFNULL(s.SUBPLACENM, '')  != IFNULL(sp.SUBPLACENM, '') OR
        IFNULL(s.ORGNM, '')       != IFNULL(sp.ORGNM, '') OR
        IFNULL(s.SVCENDTELNO, '') != IFNULL(sp.SVCENDTELNO, '') OR
        IFNULL(s.AREANM, '')      != IFNULL(sp.AREANM, '') OR
        IFNULL(s.ADRES, '')       != IFNULL(sp.ADRES, '') OR
        IFNULL(s.DTLCONT, '')     != IFNULL(sp.DTLCONT, '')
    );
    
    UPDATE stadium s
    JOIN stadium_patch sp ON s.SVCID = sp.SVCID
    SET s.STATE = 'same'
    WHERE s.STATE IS NULL;

    TRUNCATE TABLE stadium_patch;
    
    -- 슬롯 생성 프로시저 호출
CALL generate_reservation_slots();
END

